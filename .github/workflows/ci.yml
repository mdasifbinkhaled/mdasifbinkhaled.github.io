name: CI

on:
  pull_request:
    branches: ['main', 'develop']
  push:
    branches: ['develop', 'feature/**']

jobs:
  # Quality assurance job
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-ci-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.config.{ts,js,mjs}', 'src/**/*.{ts,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-ci-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-ci-

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Lint code
        run: npm run lint:check

      - name: Run type check
        run: npm run typecheck

      - name: Run tests
        run: npm run test:run

      - name: Generate test coverage
        run: npm run test:coverage

      - name: Check coverage thresholds
        run: |
          echo "## 📊 Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          if [ -f "coverage/coverage-summary.json" ]; then
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat coverage/coverage-summary.json >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      - name: Build application
        run: npm run build

      - name: Check bundle size
        run: |
          echo "## Build Results 📊" >> $GITHUB_STEP_SUMMARY
          echo "Build completed successfully! ✅" >> $GITHUB_STEP_SUMMARY
          if [ -f "out/index.html" ]; then
            echo "Static export generated successfully ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Static export failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
